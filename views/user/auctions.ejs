<!DOCTYPE html>
<html>
<head>
  <title><%= title %></title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/axios@1.4.0/dist/axios.min.js"></script>
</head>
<body>
  <div class="container mt-4">
    <h2><%= title %></h2>

    <!-- 消息提示 -->
    <div id="flash-messages"></div>
    <% if (flash.success && flash.success.length > 0) { %>
      <script>
        showFlashMessage('success', '<%= flash.success[0] %>');
      </script>
    <% } %>
    <% if (flash.error && flash.error.length > 0) { %>
      <script>
        showFlashMessage('error', '<%= flash.error[0] %>');
      </script>
    <% } %>

    <table class="table table-striped">
      <thead>
        <tr>
          <th>物品</th>
          <th>卖家</th>
          <th>当前价格</th>
          <th>一口价</th>
          <th>结束时间</th>
          <th>状态</th>
          <th>操作</th>
        </tr>
      </thead>
      <tbody>
        <% auctions.forEach(auction => { %>
          <tr id="auction-<%= auction.auction_id %>">
            <td><%= auction.物品名称 || '未命名物品' %></td>
            <td><%= auction.卖家邮箱 || '未绑定邮箱' %></td>
            <td class="current-price"><%= auction.当前价格 || 0 %></td>
            <td><%= auction.一口价 || 0 %></td>
            <td>
              <%= auction.结束时间 ? 
                   new Date(auction.结束时间).toLocaleString() : 
                   '未知时间' %>
            </td>
            <td class="status">
              <span class="badge bg-<%= {
                '上架中': 'success',
                '已完成': 'primary',
                '流拍': 'danger'
              }[auction.状态 || '未知'] %>">
                <%= auction.状态 || '未知' %>
              </span>
            </td>
            <td>
              <!-- 仅上架中状态显示报价表单 -->
              <% if (auction.状态 === '上架中') { %>
                <form class="bid-form" data-auction-id="<%= auction.auction_id %>">
                  <div class="input-group">
                    <input type="number" name="bidAmount" class="form-control" required min="<%= (auction.当前价格 || 0) + 1 %>">
                    <button type="submit" class="btn btn-primary">报价</button>
                  </div>
                </form>
              <% } %>
            </td>
          </tr>
        <% }); %>
      </tbody>
    </table>
  </div>

  <script>
    // 显示消息提示
    function showFlashMessage(type, message) {
      const flashContainer = document.getElementById('flash-messages');
      const alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
      
      const alertDiv = document.createElement('div');
      alertDiv.className = `alert ${alertClass} fade show`;
      alertDiv.role = 'alert';
      alertDiv.innerHTML = message;
      
      flashContainer.appendChild(alertDiv);
      
      // 3秒后自动关闭
      setTimeout(() => {
        alertDiv.classList.add('fade');
        setTimeout(() => {
          flashContainer.removeChild(alertDiv);
        }, 300);
      }, 3000);
    }

    // 初始化所有报价表单
    document.addEventListener('DOMContentLoaded', function() {
      document.querySelectorAll('.bid-form').forEach(form => {
        form.addEventListener('submit', function(e) {
          e.preventDefault();
          
          const auctionId = this.dataset.auctionId;
          const bidAmount = parseFloat(this.querySelector('input[name="bidAmount"]').value);
          
          
          
          // 基本验证
          if (isNaN(bidAmount) || bidAmount <= 0) {
            showFlashMessage('error', '无效的报价金额');
            return;
          }
          
          console.log(`尝试对拍卖 ${auctionId} 出价 ${bidAmount}`);
          
          // 发送AJAX请求
          axios.post(`/auction/bid/${auctionId}`, {
            auctionId: auctionId,
            bidAmount: bidAmount,
          }, {
            headers: {
              'X-Requested-With': 'XMLHttpRequest'
            }
          })
          .then(response => {
            console.log('报价成功:', response.data);
            
            // 成功响应
            showFlashMessage('success', response.data.message);
            
            // 更新UI
            const auctionRow = document.getElementById(`auction-${auctionId}`);
            if (auctionRow) {
              auctionRow.querySelector('.current-price').textContent = bidAmount;
              
              // 如果拍卖已结束，更新状态
              if (response.data.auctionEnded) {
                const statusBadge = auctionRow.querySelector('.status .badge');
                statusBadge.className = 'badge bg-primary';
                statusBadge.textContent = '已完成';
                
                // 移除报价表单
                const bidForm = auctionRow.querySelector('.bid-form');
                if (bidForm) {
                  bidForm.remove();
                }
              }
            }
          })
          .catch(error => {
            console.error('报价失败:', error);
            
            // 错误处理
            let errorMessage = '报价失败，请重试';
            
            if (error.response) {
              // 服务器返回了错误响应
              console.error('服务器响应错误:', error.response.data);
              errorMessage = error.response.data.error || '服务器错误，请重试';
            } else if (error.request) {
              // 请求已发送，但没有收到响应
              console.error('没有收到服务器响应');
              errorMessage = '无法连接到服务器，请检查网络';
            } else {
              // 设置请求时出错
              console.error('请求设置错误:', error.message);
              errorMessage = '请求设置错误: ' + error.message;
            }
            
            showFlashMessage('error', errorMessage);
          });
        });
      });
    });
  </script>
</body>
</html>